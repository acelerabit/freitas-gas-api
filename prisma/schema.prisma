// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DELIVERYMAN
}

enum TransactionType {
  ENTRY
  EXIT
  TRANSFER
}

enum TransactionCategory {
  DEPOSIT
  SALE
  EXPENSE
  INCOME
  WITHDRAW
  TRANSFER
  CUSTOM
}

enum PaymentMethod {
  CARTAO
  CARTAO_CREDITO
  DINHEIRO
  FIADO
  PIX
  TRANSFERENCIA
}

enum ProductType {
  P3
  P13
  P20
  P45
}

enum BottleStatus {
  FULL
  EMPTY
  COMODATO
}

model User {
  id String @id @default(uuid())

  name                String
  email               String  @unique
  password            String?
  status              Boolean @default(true)
  avatarUrl           String? @map("avatar_url")
  acceptNotifications Boolean @default(true) @map("accept_notifications")

  role Role @default(DELIVERYMAN)

  accountAmount Int? @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notifications Notification[]
  transactions  Transaction[]

  @@index([email])
  @@map("users")
}

model ExpenseTypes {
  id String @id @default(uuid())

  name String
}

model Notification {
  id String @id @default(uuid())

  message String
  read    Boolean @default(false)

  user User? @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  createdAt DateTime @default(now()) @map("created_at")
  userId    String?  @map("user_id")

  @@map("notifications")
}

model Product {
  id     String       @id @default(uuid())
  type   ProductType
  status BottleStatus

  price     Int
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  sales SalesProduct[]

  @@map("products")
}

model Customer {
  id            String   @id @default(uuid())
  name          String
  email         String
  phone         String
  street        String
  number        String
  district      String
  city          String
  state         String
  creditBalance Int      @default(0)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  sales Sales[]

  @@map("customers")
}

model Sales {
  id            String        @id @default(uuid())
  paymentMethod PaymentMethod
  total         Int
  createdAt     DateTime      @default(now()) @map("created_at")

  customer   Customer @relation(fields: [customerId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  customerId String   @map("customer_id")

  returned Boolean @default(false)

  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?

  products SalesProduct[]

  @@map("sales")
}

model SalesProduct {
  id        String        @id @default(uuid())
  saleId    String        @map("sale_id")
  productId String        @map("product_id")
  quantity  Int
  salePrice Int?
  typeSale  BottleStatus?

  sale    Sales   @relation(fields: [saleId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("sales_products")
}

model Transaction {
  id              String              @id @default(uuid())
  amount          Int
  transactionType TransactionType
  mainAccount     Boolean?
  category        TransactionCategory
  createdAt       DateTime            @default(now()) @map("created_at")
  description     String?

  user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String @map("user_id")

  referenceId    String?
  customCategory String?

  sales Sales[]

  @@map("transactions")
}

model Log {
  id String @id @default(uuid())

  data Json

  @@map("logs")
}

model Supplier {
  id        String   @id @default(uuid())
  name      String
  email     String
  phone     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("suppliers")
}
